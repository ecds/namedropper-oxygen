<?xml version="1.0" encoding="utf-8"?>
<project basedir="." default="default" name="NameDropper">
  <description>NameDropper extension for oXygen XML.</description>

  <property name="version" value="0.3.0"/>
  <!-- properties -->
  <property name="src" location="src" />
  <property name="lib" location="lib" />
  <property name="build" location="build" />
  <property name="reports.tests" location="${build}/test-results/" />

  <property name="dist" location="dist" />
  <property name="dist.docs" location="${dist}/docs/" />
  <property name="res" location="res" />
  <property environment="env"/>

  <!-- setup classpath for compilation -->
  <path id="project.class.path">
    <fileset dir="${lib}/" includes="**/*.jar">
      <exclude name="mockito-all-1.9.5.jar" />
      <exclude name="xercesImpl-2.8.0.jar" /> <!-- version installed by maven causes a conflict -->
    </fileset>
  </path>

  <!-- the classpath to be used for the JUnit tests -->
  <path id="project.test.class.path">
    <!-- include the project classpath so we don't have to readd jars -->
    <path refid="project.class.path" />
    <!-- Use the distribution build of NameDropper to have a consistent test -->
    <fileset dir="${dist}/${ant.project.name}" includes="${ant.project.name}.jar" />
  </path>

  <!-- the classpath to be used in the manifest for hte jar file -->
  <pathconvert property="manifest.class.path" pathsep=" ">
    <path refid="project.class.path"/>
    <mapper>
      <chainedmapper>
         <flattenmapper/>
         <globmapper from="*.jar" to="lib/*.jar"/>
      </chainedmapper>
    </mapper>
  </pathconvert>

  <!-- pre compile tasks should be added here -->
  <target name="init">
    <tstamp />
    <mkdir dir="${build}" />
  </target>

  <target name="compile" depends="init" description="compile the source">
    <javac source="1.6" target="1.6" srcdir="${src}" destdir="${build}" classpathref="project.class.path" debug="true" debuglevel="lines,vars,source" includeantruntime="false"/>

    <!-- Copy test files to build directory so we have them on classpath when running tests from jar -->
    <copy todir="${build}">
      <fileset dir="${src}" includes="**/*.json,**/*.xml" />
    </copy>
  </target>

  <!--
    Distribution Target
    builds a jar and places it in dist/NameDropper
  -->
  <target name="dist" depends="compile" description="generate the distribution">
    <mkdir dir="${dist}" />

    <!-- setup jar properties and manifest so it works correctly -->
    <jar jarfile="${dist}/${ant.project.name}/${ant.project.name}.jar">
      <fileset dir="${build}" />
      <manifest>
        <attribute name="Class-Path" value="${manifest.class.path}"/>
      </manifest>
    </jar>

    <copy todir="${dist}/${ant.project.name}/lib">
      <fileset dir="${lib}">
        <exclude name="CopyLibs/" />
        <exclude name="junit/" />
        <exclude name="junit*/" />
        <exclude name="nblibraries*" />

        <!-- don't duplicate oxygen files (these items included in oxygen SDK)  -->
        <exclude name="oxygen.jar" />
        <exclude name="api.zip" />
        <exclude name="workspaceaccess.jar"/>
        <exclude name="jide-*.jar"/>

        <!-- don't include test dependencies -->
        <exclude name="powermock-*.jar" />
        <exclude name="mockito-*.jar" />
      </fileset>
    </copy>

    <copy file="plugin.xml" todir="${dist}/${ant.project.name}" />
    <jar jarfile="${dist}/${ant.project.name}-${version}.jar">
      <!-- plugin must include the wrapping NameDropper directory -->
      <fileset dir="${dist}" includes="${ant.project.name}/**" />
    </jar>
  </target>

  <!--
    Test Target
  -->
  <target name="test" depends="compile,dist" description="Run the unit tests">
    <echo message="Running tests." />

    <mkdir dir="${reports.tests}"/>
    <junit printsummary="no" haltonfailure="yes" haltonerror="yes" fork="yes">
        <jvmarg value="-XX:-UseSplitVerifier"/>

      <!-- reference the path defined at the top of the file-->
      <classpath refid="project.test.class.path" />

      <formatter type="plain" usefile="false"/>
      <formatter type="xml"/>

      <batchtest fork="yes" haltonfailure="no" todir="${reports.tests}">
        <fileset dir="${src}" includes="**/tests/*Test*.java" />
      </batchtest>

    </junit>

  </target>

  <!--
    Clean Target
    removes build and dist dirs
  -->
  <target name="clean" description="clean up">
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>

  <!-- convenience task to install built version to a local oxygen instance -->
  <target description="Copy built plugin to local Oxygen installation" name="install" depends="default">
      <fail unless="env.OXYGEN_HOME" message="Install requires OXYGEN_HOME environment variable."/>
      <copy todir="${env.OXYGEN_HOME}/plugins/${ant.project.name}">
        <fileset dir="${dist}/${ant.project.name}"/>
      </copy>
  </target>

  <!-- convenience task to install built version to a local oxygen instance -->
  <target description="Copy built plugin to local Oxygen installation without running tests or javadocs." name="install-no-doc" depends="dist">
      <fail unless="env.OXYGEN_HOME" message="Install requires OXYGEN_HOME environment variable."/>
      <copy todir="${env.OXYGEN_HOME}/plugins/${ant.project.name}">
        <fileset dir="${dist}/${ant.project.name}"/>
      </copy>
  </target>

  <!-- convenience task to uninstall built version copied to a local oxygen instance -->
  <target description="Remove built plugin from local Oxygen installation" name="uninstall">
      <fail unless="env.OXYGEN_HOME" message="Uninstall requires OXYGEN_HOME environment variable."/>
      <delete dir="${env.OXYGEN_HOME}/plugins/${ant.project.name}"/>
  </target>

  <!-- generate javadocs -->
  <target name="doc">
      <mkdir dir="${dist.docs}"/>
      <javadoc charset="UTF-8" destdir="${dist.docs}" failonerror="true">
            <classpath refid="project.class.path" />
            <fileset dir="${src}">
                <filename name="**/*.java"/>
            </fileset>
        </javadoc>
  </target>

  <target name="default" depends="dist,test,doc"
      description="Compile, Build Distribution and Test the NameDropper Oxygen plugin" />
</project>