<?xml version="1.0" encoding="utf-8"?>
<project basedir="." default="dist" name="NameDropper">
  <description>NameDropper extension for oXygen XML.</description>

  <!-- properties -->
  <property name="src" location="src" />
  <property name="lib" location="lib" />
  <property name="build" location="build" />
  <property name="build.tests" location="${build}/tests" />
  <property name="dist" location="dist" />
  <property name="tests" location="tests" />

  <!-- setup classpath -->
  <path id="project.class.path">
    <fileset dir="${lib}/" includes="**/*.jar" />
  </path>

  <path id="project.test.class.path">
    <!-- include the project classpath so we don't have to readd jars -->
    <path refid="project.class.path" />

    <!-- include build/tests so we can get access to the test class on the cp -->
    <pathelement location="${build.tests}" />

    <!-- Use the distribution build of NameDropper to have a consistent test -->
    <fileset dir="${dist}/${ant.project.name}" includes="${ant.project.name}.jar" />

    <!-- This is only here because the tests resources are here -->
    <!-- TODO: refactor tests into main source so test resources can be there -->
    <pathelement location="${tests}"/>
  </path>

  <!-- pre compile tasks should be added here -->
  <target name="init">
    <tstamp />
    <mkdir dir="${build}" />
  </target>

  <target name="compile" depends="init" description="compile the source">
    <javac source="1.6" target="1.6" srcdir="${src}" destdir="${build}" classpathref="project.class.path" debug="true" debuglevel="lines,vars,source" includeantruntime="false" />
  </target>

  <!--
    Distribution Target
    builds a jar and places it in dist/NameDropper
  -->
  <target name="dist" depends="compile" description="generate the distribution">
    <mkdir dir="${dist}" />

    <jar jarfile="${dist}/${ant.project.name}/${ant.project.name}.jar" basedir="${build}" />

    <copy todir="${dist}/${ant.project.name}/lib">
      <fileset dir="${lib}">
        <exclude name="CopyLibs/" />
        <exclude name="junit/" />
        <exclude name="junit*/" />
        <exclude name="nblibraries*" />
        <exclude name="oxygen*" />
      </fileset>
    </copy>
    
    <copy file="plugin.xml" todir="${dist}/${ant.project.name}" />
  </target>

  <!--
    Compile Test Target
  -->
  <target name="compile-test" depends="compile,dist" description="Compile the tests">
    <mkdir dir="${build}/tests" />

    <javac source="1.6" target="1.6" srcdir="${tests}" destdir="${build.tests}" classpathref="project.test.class.path" includeantruntime="false" />
  </target>

  <!--
    Test Target
  -->
  <target name="test" depends="compile-test" description="Run the unit tests">
    <echo message="Running tests." />
    <junit printsummary="yes" haltonfailure="yes" haltonerror="yes">

      <!-- reference the path defined at the top of the file-->
      <classpath refid="project.test.class.path" />

      <!-- run the tests and output results in plaintext as well as xml -->
      <test name="NameDropperTest" haltonfailure="no" outfile="result">
        <formatter type="plain"/>
        <formatter type="xml"/>
      </test>
    </junit>

  </target>

  <!--
    Clean Target
    removes build and dist dirs
  -->
  <target name="clean" description="clean up">
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>
</project>